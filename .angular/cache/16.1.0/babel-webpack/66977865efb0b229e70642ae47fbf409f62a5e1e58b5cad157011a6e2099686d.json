{"ast":null,"code":"import * as i0 from \"@angular/core\";\nconst key = 'liste';\nconst keyName = 'listeInscrits';\nexport class LocalstorageService {\n  constructor() {\n    this.workshops = [];\n    this.inscriptions = [];\n    const workshopsData = localStorage.getItem(key);\n    if (workshopsData) {\n      this.workshops = JSON.parse(workshopsData);\n    }\n    const participantsData = localStorage.getItem(keyName);\n    if (participantsData) {\n      this.inscriptions = JSON.parse(participantsData);\n    }\n  }\n  saveWorkshops(workshops) {\n    localStorage.setItem(key, JSON.stringify(workshops));\n  }\n  saveInscription() {\n    localStorage.setItem(keyName, JSON.stringify(this.inscriptions));\n  }\n  getAllWorkshops() {\n    return this.workshops;\n  }\n  getWorkshopById(id) {\n    return this.workshops.find(workshop => workshop.id === id) || null;\n  }\n  addWorkshop(workshop) {\n    workshop.id = this.workshops.length + 1;\n    this.workshops.push(workshop);\n    this.saveWorkshops(this.workshops); // Update the method call\n  }\n\n  setItem(key, value) {\n    if (value != null) {\n      try {\n        localStorage.setItem(key, JSON.stringify(value));\n      } catch (error) {\n        alert('Error');\n      }\n    }\n  }\n  updateWorkshop(updatedWorkshop) {\n    const workshops = this.getAllWorkshops();\n    const index = workshops.findIndex(workshop => workshop.id === updatedWorkshop.id);\n    if (index !== -1) {\n      workshops[index] = updatedWorkshop;\n      this.saveWorkshops(workshops); // Update the method call\n    }\n  }\n\n  removeWorkshop(id) {\n    const index = this.workshops.findIndex(workshop => workshop.id === id);\n    if (index !== -1) {\n      this.workshops.splice(index, 1);\n      this.saveWorkshops(this.workshops); // Update the method call\n    }\n  }\n\n  getAllInscriptions() {\n    return this.inscriptions;\n  }\n  removeInscription(id) {\n    const index = this.inscriptions.findIndex(inscription => inscription.id === id);\n    if (index !== -1) {\n      this.inscriptions.splice(index, 1);\n      this.saveInscription();\n    }\n  }\n  addInscription(inscription) {\n    inscription.id = this.inscriptions.length + 1;\n    this.inscriptions.push(inscription);\n    this.saveInscription();\n  }\n  getWorkshop(id) {\n    const workshops = this.getAllWorkshops();\n    return workshops.find(workshop => workshop.id === id);\n  }\n}\nLocalstorageService.ɵfac = function LocalstorageService_Factory(t) {\n  return new (t || LocalstorageService)();\n};\nLocalstorageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LocalstorageService,\n  factory: LocalstorageService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["key","keyName","LocalstorageService","constructor","workshops","inscriptions","workshopsData","localStorage","getItem","JSON","parse","participantsData","saveWorkshops","setItem","stringify","saveInscription","getAllWorkshops","getWorkshopById","id","find","workshop","addWorkshop","length","push","value","error","alert","updateWorkshop","updatedWorkshop","index","findIndex","removeWorkshop","splice","getAllInscriptions","removeInscription","inscription","addInscription","getWorkshop","factory","ɵfac","providedIn"],"sources":["/Users/arc.admin/Documents/gestion-documents-sgbd/src/app/localstorage-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\nconst key = 'liste';\nconst keyName = 'listeInscrits';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalstorageService {\n  workshops: any[] = [];\n  inscriptions: any[] = [];\n\n  constructor() {\n    const workshopsData = localStorage.getItem(key);\n    if (workshopsData) {\n      this.workshops = JSON.parse(workshopsData);\n    }\n    const participantsData = localStorage.getItem(keyName);\n    if (participantsData) {\n      this.inscriptions = JSON.parse(participantsData);\n    }\n  }\n\n  saveWorkshops(workshops: any[]): void {\n  localStorage.setItem(key, JSON.stringify(workshops));\n}\n\n\n  saveInscription(): void {\n    localStorage.setItem(keyName, JSON.stringify(this.inscriptions));\n  }\n\n  getAllWorkshops(): any[] {\n    return this.workshops;\n  }\n\n  getWorkshopById(id: number): any | null {\n    return this.workshops.find((workshop) => workshop.id === id) || null;\n  }\n\n  addWorkshop(workshop: any): void {\n    workshop.id = this.workshops.length + 1;\n    this.workshops.push(workshop);\n    this.saveWorkshops(this.workshops); // Update the method call\n  }\n\n  setItem(key: string, value: any): void {\n    if (value != null) {\n      try {\n        localStorage.setItem(key, JSON.stringify(value));\n      } catch (error) {\n        alert('Error');\n      }\n    }\n  }\n\n  updateWorkshop(updatedWorkshop: any): void {\n    const workshops = this.getAllWorkshops();\n    const index = workshops.findIndex((workshop: any) => workshop.id === updatedWorkshop.id);\n    if (index !== -1) {\n      workshops[index] = updatedWorkshop;\n      this.saveWorkshops(workshops); // Update the method call\n    }\n  }\n\n  removeWorkshop(id: number): void {\n    const index = this.workshops.findIndex((workshop) => workshop.id === id);\n    if (index !== -1) {\n      this.workshops.splice(index, 1);\n      this.saveWorkshops(this.workshops); // Update the method call\n    }\n  }\n\n  getAllInscriptions(): any {\n    return this.inscriptions;\n  }\n\n  removeInscription(id: number): void {\n    const index = this.inscriptions.findIndex((inscription) => inscription.id === id);\n    if (index !== -1) {\n      this.inscriptions.splice(index, 1);\n      this.saveInscription();\n    }\n  }\n\n  addInscription(inscription: any): void {\n    inscription.id = this.inscriptions.length + 1;\n    this.inscriptions.push(inscription);\n    this.saveInscription();\n  }\n\n  getWorkshop(id: number): any {\n    const workshops = this.getAllWorkshops();\n    return workshops.find((workshop: any) => workshop.id === id);\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}